---
layout:     post
title:      "rsync를 이용한 서버 백업"
subtitle:   "AWS EC2로 생성한 리눅스 인스턴스의 파일 백업"
date:       2018-03-21 18:00:00
author:     "Inbum"
header-img: "img/post-bg-rsync-intro.jpg"
header-mask: 0.3
category:   rsync
catalog:    true
multilingual: false
tags:
    - rsync
sitemap:
    priority: 1.0
    changefreq: 'weekly'
    lastmod: 2018-03-21 18:00:00
---

### rsync란? 
rsync는 빠르고 기능이 아주 많은, 원격(로컬) 파일 복사 툴 입니다. rsync의 강력한 스크립트기능(scriptability)및 속도(speed), 유연함(flexibility) 덕분에 표준 리눅스 유틸리티가 되었고, 대부분의 리눅스 배포판에 포함되어 있습니다. Windows( Cygwin ), Ubuntu, CentOS, macOS에도 포팅되어 있습니다.

rsync의 몇가지 추가특징들은 다음과 같습니다.
- links, devices, owners, groups, and permissions 복사를 지원 합니다.
- GNU tar와 비슷한 exclude와 exclude-from옵션을 제공합니다.
- CVS exclude 모드 - CVS에서 무시하는 동일한 파일들을 무시.
- ssh 또는 rsh를 포함하여 어떠한 remote shell 을 사용할 수 있습니다.
- super-user 권한이 필요하지 않습니다.
- 대기 시간 비용을 최소화하기위해 파일 전송에 파이프 라이닝을 사용합니다.
- 익명사용자 또는 rsync 데몬 인증을 지원합니다.(미러링에 이상적)

rsync는 백업 및 미러링에 주로 쓰이고, 고급 복사 기능을 사용하기위한 명령으로도 널리 사용됩니다.

### 주로 사용하는 구문
~~~
rsync [OPTION] … SRC … [USER@]HOST:DEST
rsync [OPTION] … [USER@]HOST:SRC [DEST]
~~~


### 옵션 

| option | description | 
|---|---| 
| -v &#124 –verbose | 동기화시 상세정보를 표시함. 해당 옵션은 3개까지 설정가능. 2,3개동시에 설정하면, 더욱 상세한 정보를 표시함 | 
| -q &#124 –quiet | 동기화 정보를 표시하지 않음. cron등에 의한 배치처리등에서 사용함. | 
| -c &#124 –checksum | 전송전에 128비트 MD4의 체크섬을 사용하여, 송신서버의 모든 파일의 체크섬을 만든다. 그 체크섬은 수신서버에서 확인함. 그리고 송신서버와 같은 체크섬, 같은 사이즈, 같은 이름인 파일은 스킵. 해당 옵션을 사용하면 매우 느려짐. | 
| -a &#124 –archive | 아카이브 모드로 실행함. [-rlptgoD]옵션을 지정하면 같은 동작을 하나, 해당 옵션 하나로 대부분의 디렉토리, 파일의 정보를 유지하며 동기화가 가능하므로 편리함. | 
| -r &#124 –recursive | 재귀적으로 디렉토리를 카피함. 해당 옵션을 지정하지 않으면, rsync명령어로는 디렉토리를 동기화 하지 않음. | 
| -b &#124 –backup | 동기화할 디렉토리에 이미 파일이 존재하는 경우, 동기화할 디렉토리에 백업. 이 경우 디폴트로 [~]이 붙는다. | 
| -u &#124 –update | 동기화할 디렉토리에 원본소스보다 최신인 파일이 있을경우, 해당 파일은 동기화하지 않음. | 
| –inplace | 데이터를 업데이트 해야하는경우, rsync가 파일을 전송하는 방법을 변경한다. 디폴트로는 새로운 복사본을 만들어서 전송하는데, 해당 옵션을 설정하면 동기화 대상 파일에 rsync가 직접 업데이트된 데이터를 쓴다.
이 명령어는 몇가지 영향 끼치는 것이 있다.
1) 바이너리 파일에 사용하면 업데이트 되지 않음.
2) 파일 전송중에는 해당파일은 불일치 상태가 됨.
3) 파일 전송중 실패 혹은 중단이 되면, 해당 파일은 불일치 상태로 남겨짐.
4) 해당파일에 쓰기권한이 없으면 업데이트되지 않음. 그리고
5) rsync의 델타-전송 알고리즘의 효능이 떨어짐.
주의! : 다른 곳에서 해당파일에 접근한다면 사용하지말라, 그리고 복사용으로 사용할경우는 충분히 주의를 기울여서 사용하라.
해당옵션은 큰파일의 블록단위 변화나 데이터의 추가, 그리고 시스템 디스크의 용량이 제한된 상황에서는 유용하다. (네트워크 트래픽 제한은 관계없다.)
또한 해당 옵션은 –partial을 적용시킨다. (전송중 실패한경우 파일을 삭제하지 않기위해서), 그러나 –partial-dir 과 –delay-updates와 같이 사용하면 충돌(conflict)이 일어날 것이다.
rsync 2.6.4에서 –inplace는 –compare-dest, –link-dest와 같이 사용하는건 적절하지 않다. | 
| -l &#124 | –links	동기화할 서버에 심볼릭 링크를 작성함. 해당옵션을 지정하지 않을경우에는 심볼릭 링크 파일은 동기화하지 않음 | 
| -p &#124 | –perms	퍼미션 정보를 유지하면서 동기화를 함. | 
| -o &#124 | –owner	소유자 정보를 유지하면서 동기화를 함. root권한을 가진 유저만 실행가능. | 
| -g &#124 | –group	그룹 정보를 유지하면서 동기화를함. | 
| -D &#124 | –devices	동기화할 디바이스를 재작성함. root권한을 가진 유저만이 실행가능. | 
| -t &#124 | –times	파일의 타임 스탬프를 유지하면서 파일을 동기화함. 해당옵션을 지정하지 않는경우는, 모든 파일에 대해 비교 작업을 실행함. | 
| -n &#124 | –dry-run	실제로 동기화를 실행하지는 않고, 동기화 하게될 때의 동작을 표시해줌 | 
| -e &#124 | –rsh=커맨드	rsync커맨드로 사용할 리모트 쉘 프로그램(ssh같은거)를 지정함. 디폴트로는 rsh를 사용 | 
| –del &#124 | –delete	동기화 소스에 없는 파일이 동기화할 곳에 있는 경우, 그 파일을 삭제함. | 
| –partial | 부분적으로 전송된 파일을 유지시킴 | 
| –partial-dir=DIR | 부분적으로 전송된 파일을 지정한 DIR에 둠. | 
| –delay-updates | 업데이트할 파일들을 가장마지막에 둠. | 
| -z &#124 –compress | 동기파일을 압축함. | 
| –exclude=패턴 | 지정한 패턴에 일치하는 파일을 동기대상에서 제외시킴. | 
| –exclude-from=FILE | 파일에 기술된 패턴과 일치하는 파일을 제외. | 
| –deamon | rsync를 데몬 모드로 실행함. | 
| –config=FILE | 별도의 rsyncd.conf파일을 지정 | 
| –stats | rsync알고리즘의 송신효율을 표시함. | 
| -h &#124 –human-readable | 결과의 수치들을 사람이 읽기편한 포맷으로 출력 | 
| –progress | 전송의 진행 상황을 표시 | 
| -P | –partial –progress 와 동일 |
| -i &#124 –itemize-changes | 모든 업데이트에 대한 요약을 출력 | 
| –log-file=FILE | 무슨 작업을 했는지에 대한 상세로그를 파일로 남김 | 
| 동기화 소스 디렉토리 | 동기화 소스 디렉토리를 지정함. | 
| [[유저명@]호스트명:]동기화할디렉토리 | 동기화할 서버와 디렉토리를 지정함. 리모트 호스트를 (동기화)타겟으로 할 경우는, 반드시 호스트와 유저명을 같이 지정해야한다. |
| –version | 커맨드의 버전을 표시함. | 
| –help | 커맨드의 도움말을 표시함. | 

### 예를들어,
AWS EC2로 생성한 리눅스 인스턴스에 있는 파일을 백업하고자 할때, 아래 명령어 한줄을 이용하면 아주 쉽게 백업이 가능합니다.
추후 변경된 부분만 복사하고자 할 경우에도, 동일한 명령어를 사용하여 빠르고 효과적으로 복사가 가능합니다.
~~~
rsync -rave "ssh -i my-key-pair.pem" ubuntu@public_dns_name:/home/ubuntu/ myaws_backup/ 
~~~

> 참고로
> Amazon Linux의 경우 사용자 이름은 ec2-user입니다. 
> Centos의 경우 사용자 이름은 centos입니다. 
> Debian의 경우 사용자 이름은 admin 또는 root입니다. 
> Fedora의 경우 사용자 이름은 ec2-user입니다. 
> RHEL의 경우 사용자 이름은 ec2-user 또는 root입니다. 
> SUSE의 경우 사용자 이름은 ec2-user 또는 root입니다. 
> Ubuntu의 경우 사용자 이름은 ubuntu 또는 root입니다.

***

스크립트 작성 및 Cron을 이용하면 아주 손 쉽게 백업 시스템을 구축할 수 있겠지요.:smiley:

